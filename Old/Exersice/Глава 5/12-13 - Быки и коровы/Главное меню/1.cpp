//Название программы: Быки и коровы
//Цель программы: Составление цикла с запросом информации, её обработкой и выдачей нескольких вариантов ответа
//Автор: Антонюк И.В.
//Дата начала написания: 1.11.2016
//Дата окончания написания:
//Номер версии:1.0
//Фрагменты кода, которые могут вызвать проблемы: Вложенный внутренний многоступенчатый цикл 
//Основные идеи проекта:1. Коровы считаются инкрементом, который срабатывает если некоторое число введенной последовательности совпадает с любым из числе заданной последовательности; 2. Быки считаются инкрементом, который срабатывает если совпадают числа обеих последовательностей с одним и тем же индексом.
//Способ организации кода: 1. Функция main; 2. Обработка исключений; 3. Вектор вариантов. 4. Многоступенчатый цикл сравнений; 5. Функция вывода.
//Предположения о вводных данных: Числовые или строковые значения не более 4-х символов.

#include <std_lib_facilities.h>

int main ()
try
{
string a = " "; // Ввод
string b = " "; // Вывод
int reg = 0; // Режим
int next = 0;

//.............................
//.............................
//........(счетчики)...........
int i = 0;
int i2 = 0;
int i3 = 0;
int i4 = 0;
int bulls = 0;
int kows = 0;
//.............................
//.............................
//.............................
vector<string>bk = {"9672"};
while (reg!=3) // Общий цикл - одна интеракция - один цикл работы всей программы
		{
		if (i=bk.size()-1&&reg==1) cout << "GZ!!!!! Ti otgadal vse slova!!!!\n";
		cout << "Viberite rezhim: 1-Ugadivanie; 2-dobavlenie, 3-exit;\n";
		cin >> reg;
		if (reg==2) // Режим ввода данных;
			{
		cout << "Dobavte 4-h znachnie chisla\n";
		
		while (a.size ()!=4)// Контроль за вводимым значением, которое должно состоять только из 4х символов;
			{cin >> a;
			if (a.size () !=4) cout << "Uncorrect value\n";
			}
		
		bk.push_back(a);
		a=" ";
				}
		if (reg==1) // Режим отгадывания;
			{
				cout << "Pls....ugadaite zagadannoe 4-h znachnoe chislo - igra biki i korovi\npravila tebe izvestni\n";
				while (i<bk.size()) // Навигация по вектору, 1 интеракция одно четырехзначное число;
					{	b=bk[i];
						a=" ";
						while (a.size ()!=4) // Контроль за вводимым значением, которое должно состоять только из 4х символов;
						{
						cin >> a;	if (a.size () !=4) cout << "Uncorrect value\n";
						}
						while (i2<4) // Подсчет количества быков, 1 интерация - 1 сопоставление, всего 4 сопоставления;
						{
							if (bulls<4&&a[i2]==b[i2]) ++bulls;
							while (i3<4) // Подсчет количества коров, 1 итерация - 4 сопоставления, всего 16 сопоставления, 1 символ a с 4 из b
							{
							if (a[i2]!=a[i2-1]&&a[i2]!=a[i2-2]&&a[i2]!=a[i2-3]&&a[i2]==b[i3]) ++kows;
							++i3;
							}
						++i2;
						i3=0;
						}
					///////////////////////////////////////////////////////////////////////////////////////
					//////////////////////Вывод////////////////////////////////////////////////////////////
					if (kows!=0&&kows!=4)	cout << "OK, you are have " << kows << " kows\n" << "\n";
					if (kows==0)	cout << "OK, you are have no kows\n" << "\n";
					if (kows==4)	cout << "GZ!!! You are have all " << kows << " kows" << "\n";
					if (bulls!=0&&bulls!=4)	cout << "OK, you are have " << bulls << " bulls\n" << "\n";
					if (bulls==0)	cout << "OK, you are have no bulls\n" << "\n";
					if (bulls==4)	
							{
							cout << "GZ!!! You are have all " << bulls << " bulls" << "\n";
							cout << "next numbers? 1-yes; 2 = no; 3 = exit\n";
							cin >> next;
							if (next == 1) {++i; i2=0; i3=0; bulls=0;};
							if (next == 3) i=bk.size(); //Выход в главное меню;
							}
					i2=0;
					kows=0;
					bulls=0;	
					}
			reg=0;
			
			}
		}

}
				
		


catch (exception& e)
{
cerr << e.what () << "\nUps.....\n";
}