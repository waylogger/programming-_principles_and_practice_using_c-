//Название программы: Быки и коровы
//Цель программы: Составление цикла с запросом информации, её обработкой и выдачей нескольких вариантов ответа
//Автор: Антонюк И.В.
//Дата начала написания: 1.11.2016
//Дата окончания написания: 03.11.2016
//Номер версии:1.0
//Фрагменты кода, которые могут вызвать проблемы: Вложенный внутренний многоступенчатый цикл 
//Основные идеи проекта:1. Коровы считаются инкрементом, который срабатывает если некоторое число введенной последовательности совпадает с любым из числе заданной последовательности; 2. Быки считаются инкрементом, который срабатывает если совпадают числа обеих последовательностей с одним и тем же индексом.
//Способ организации кода: 1. Функция main; 2. Обработка исключений; 3. Вектор вариантов. 4. Многоступенчатый цикл сравнений; 5. Функция вывода.
//Предположения о вводных данных: Числовые или строковые значения не более 4-х символов.

#include <std_lib_facilities.h>

int main ()
try
{
	setlocale(0, ""); // язык
	
	
	
	
	string a = " "; // отгадка
	int reg = 0; // режим
	int next = 0; //следующее слово
	int kows = 0; // коровы
	int bulls = 0; // быки
	int n = 0; // Начальное значение = seed 
	//Счетчики
	int i2 = 0;
		
		
while (reg!=2)
	{
	
	int ib1 = 0; // случайная цифра №1
	int ib2 = 0; // случайная цифра №2
	int ib3 = 0; // случайная цифра №3
	int ib4 = 0; // случайная цифра №4
	char sb1[16] = " "; //строковая загадка №1
	char sb2[2] = " "; //строковая загадка №2
	char sb3[2] = " "; //строковая загадка №3
	char sb4[2] = " "; //строковая загадка №4
	int n =0;
	cout << "Введите любое целое число\n";
	cin >> n;
	
	srand(n); // случайная цифра №1
	ib1 = rand () %10;
	itoa(ib1, sb1, 10);
	
	n=n*n;
	srand(n); // случайная цифра №2
	ib2 = rand () %10;
	itoa(ib2, sb2, 10);
	
	n=n/n;
	srand(n); // случайная цифра №3
	ib3 = rand () %10;
	itoa(ib3, sb3, 10);
	
	n=n/n+641;
	srand(n); // случайная цифра №4
	ib4 = rand () %10;
	itoa(ib4, sb4, 10);
	
	//конкатенация строк
	strcat(sb1,sb2); 
	strcat(sb1,sb3);
	strcat(sb1,sb4);

		
		
		cout << "Для начала игры - Быки и коровы - введите 1, для выхода введите - 2 \n";
		cin >> reg;
			while (reg!=1&&reg!=2)
			{
				cout << "Некорректное значение, повторите ввод \n";
				cin >> reg;
				if (reg==2) error ("Прощай\n");
			}
			;
			cout << "Как вы думаете, какое четырехзначное число было загадано?\n";
			while (a!="help")
			{
			cout << sb1 << "\n";
			cin >> a;
				while (a.size ()!=4)
				{
					cout << "Некорректное значение, повторите ввод \n";
					cin >> a;
				}
			for (int i =0; i<4; ++i) 
				{
					if (sb1[i]==a[i]) ++bulls;
					for (int i2 = 0; i2<4; ++i2) 
						if (a[i]==sb1[i2]
							&&a[i]!=a[i-1]
							&&a[i]!=a[i-2]
							&&a[i]!=a[i-3]) 
							++kows;
				}
			if (a!="help") cout << "Быков = " << bulls << "\n";
			if (a!="help") cout << "Коров = " << kows << "\n";
			if (a!="help"&&kows==4) cout << "Поздравляем, вы нашли всех коров!!!\n";
			if (a!="help"&&kows>0&&kows<4) cout << "Извините, из всех спрятанных коров вы нашли только "
									 << kows << "\n";
			if (a!="help"&&kows==0) cout << "Извините, вы не нашли не одной коровы\n";
			if (a!="help"&&bulls>0&&bulls<4) cout << "Извините, из всех спрятанных быков, вы нашли только "
									 << bulls << "\n";
			if (a!="help"&&bulls==4) 
			{
				cout << "Поздравляем, вы нашли всех быков!!!\n";
				
					cout << "Введите любое целое число\n";
					cin >> n;
	
					srand(n); // случайная цифра №1
					ib1 = rand () %10;
					itoa(ib1, sb1, 10);
					
					n=n*n;
					srand(n); // случайная цифра №2
					ib2 = rand () %10;
					itoa(ib2, sb2, 10);
					
					n=n*64031;
					srand(n); // случайная цифра №3
					ib3 = rand () %10;
					itoa(ib3, sb3, 10);
					
					n=n*n+641;
					srand(n); // случайная цифра №4
					ib4 = rand () %10;
					itoa(ib4, sb4, 10);
					
					//конкатенация строк
					strcat(sb1,sb2); 
					strcat(sb1,sb3);
					strcat(sb1,sb4);
				
			}
			if (a!="help"&&bulls==0) cout << "Извините, но вы не нашли ни одного быка\n";
			bulls=0;
			kows =0;
			}
			
			
		
	}
	
}
catch (exception& e) {
cerr << e.what ();
}