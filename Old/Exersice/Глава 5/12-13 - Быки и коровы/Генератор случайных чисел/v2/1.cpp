/* во второы версии программы моя задача улучшить программу, не работу программы, а код, его нужно привести в порядок.

Итак программа должна состоять из следующих блоков:
1. Запрос числа - целого, положительного;
2. Предложения ввести первое предположение
3. Дать рефлексию по числу быков и коров


Функции:
1. Считывание из потока cin в переменную n;
2. Функция приобразования n в случайное четырехзначное числов; вывод числа на экран;
3. Функция сравнивающая созданное число с введенным и выводящая результат в виде сообщения о количестве
быков и коров, которые были угаданы;
4. Обработка ошибок: ввод не целого числа, либо не числа вовсе должен исключаться; - приоритет 2
5. Восстановление после ошибок; - приоритет 3

*/
#include <std_lib_facilities.h>
const char prompt = '>'; // задаем символьные константы


class stream { //Просто мне заходелось, чтобы функция отвечающая за ввод и игнорирование символов были внутри одного класса
	public:
	int streams ();
	void ignore() ;
};
stream st;
void stream::ignore() { //пустая функция, нужна, чтобы обработка исключений не завершала программу
}
void mistakes() { //определение пустой функции
	st.ignore();
}
int stream::streams() { // обрабатываем потока ввода, ищем семя для генератора случайных чисел
	setlocale(0, " "); //русский язык само собой
	cout << "Введите любое положительное целое число\n";
	int n =0;
	cout << prompt; //стрелочка
	char ch;
	while(cin) { //считываем поток ввода
	cin >> ch;
	if (isdigit(ch)) {cin.putback(ch); cin >> n;} //если число, то возвращаем и считываем как число
	else error ("Непредусмотренное значение"); 
	return n;
	}
	}
string random_num() { //делаем загадку
	int n = st.streams (); //берем семя
	int i = 0;
	string word = "";
	char ch[16];
	while (i<4) { //в зависимости от стадии цикла n принимает разные значения, чтобы генератор случайных чисел не повторялся
	++i;			// всего проходит 4 цикла, на каждом генерируется 1 случайное число
	if (i==1)n=n*n*4;
	if (i==2)n=n*n*5;
	if (i==3)n=n*n*6;
	if (i==4)n=n*n*7;
	srand(n); //ложим семя
	int rn = rand()%10; // вычисляем число
	itoa(rn, ch, 10); //переводим в char
	word += ch; // проводим посимвольную конкантенацию
	} 
	return word;
};
string come ()  { //Принимаем отгадку
setlocale(0, " ");
string yourword;
char ch;
cout << "Вариант: ";
while(true) { 
cin >> ch;
if (isdigit(ch)) { //отгадка тоже должна быть числом
	yourword += ch;
	if (yourword.size()>4) error ("Символов должно быть только 4");
	if (yourword.size()==4)return yourword;
	}
else error ("Непредусмотренное значение");
}
return yourword;
}	
void analisyst () { //сравниваем загадку и отгадку
string word = random_num ();
string yourword;
int bulls = 0;
int cows = 0;
cout << word << '\n';
	int i =0;
	while (true) {
		yourword = come ();
		for (int i = 0; i<4; ++i) { //быка сравниваем с стоящим напротив быком и всеми коровами
			if (word[i]==yourword[i]) ++bulls;
		for (int i2 = 0; i2<4;++i2) {
		if (word[i]==yourword[i2]
		&&yourword[i2]!=word[i-1] //если корова равна уже встреченой, то не прибавляем
		&&yourword[i2]!=word[i-2]
		&&yourword[i2]!=word[i-3]
		&yourword[i2]!=word[i-4]) 
		++cows;}}
		++i;
		cout << "Bulls - " << bulls  << "\n";
		cout << "Cows  - " << cows << "\n";
		if (bulls==4) return;
		bulls = 0;
		cows = 0;
	}
cout << "Bulls - " << bulls  << "\n";
cout << "Cows  - " << cows << "\n";
return;
}
int main () 
try {
setlocale(0, "");
cout    << "Угадай четырехзначное число!\nЗапомни, что ты получаешь 1 корову когда"
		<< " угадал цифру,\nкоторая есть в последовательности,\nа быка когда ты угадал цифру\nна своем месте\n";
while (true)
try {
analisyst ();
}
catch (exception& e) {	 // восстанавливаемся блядь после ошибок
	cerr << e.what () << endl;
	mistakes();
	}
}
catch (...) {
	cerr << "Ups....\n";
	keep_window_open("~~");
}
	

























